name: Repair Android & Build APK

on:
  workflow_dispatch: {}

permissions:
  contents: write

jobs:
  repair_build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Java 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '17'

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.19.6'
          channel: stable

      - name: Backup old android (if present) and regenerate
        run: |
          set -e
          if [ -d android ]; then
            mv android android_old
          fi
          flutter create .

      - name: Restore applicationId / namespace from old project (if available)
        run: |
          set -e
          OLD_APPID=""
          if [ -f android_old/app/build.gradle ]; then
            OLD_APPID=$(grep -Po '(?<=applicationId ")[^"]+' android_old/app/build.gradle || true)
          fi
          if [ -z "$OLD_APPID" ] && [ -f android_old/app/src/main/AndroidManifest.xml ]; then
            OLD_APPID=$(grep -Po '(?<=package=")[^"]+' android_old/app/src/main/AndroidManifest.xml | head -n1 || true)
          fi
          if [ -z "$OLD_APPID" ]; then
            OLD_APPID="com.example.storage_app"
          fi
          echo "Using applicationId: $OLD_APPID"

          # SÃ¤tt namespace till samma som applicationId
          sed -i "s/^ *namespace .*/    namespace \"$OLD_APPID\"/" android/app/build.gradle

          # Se till att applicationId finns i defaultConfig
          awk -v appid="$OLD_APPID" '
            BEGIN{inserted=0}
            {print}
            /defaultConfig *\{/ && inserted==0 {print "        applicationId \"" appid "\""; inserted=1}
          ' android/app/build.gradle > android/app/build.gradle.new
          mv android/app/build.gradle.new android/app/build.gradle

      - name: Copy google-services.json if existed
        run: |
          if [ -f android_old/app/google-services.json ]; then
            cp android_old/app/google-services.json android/app/google-services.json
          fi

      - name: Flutter pub get
        run: flutter pub get

      - name: Build release APK
        run: flutter build apk --release

      - name: Show outputs
        run: ls -R build/app/outputs || true

      - name: Commit regenerated android/ back to repo
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git add android
          git commit -m "Regenerate android with Flutter create (automated)" || echo "No changes to commit"
          git push

      - name: Upload APK
        uses: actions/upload-artifact@v4
        with:
          name: app-release
          path: |
            build/app/outputs/flutter-apk/*.apk
            build/app/outputs/apk/release/*.apk

      - name: Upload android_old backup (optional)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: android_old-backup
          path: android_old/**