name: Repair & Build Flutter Android

on:
  workflow_dispatch: {}   # gör att du kan köra den manuellt

permissions:
  contents: write         # krävs för att committa tillbaka

jobs:
  repair_and_build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.19.0'   # välj samma som du använt tidigare

      - name: Pub get
        run: flutter pub get

      # ★ Viktigt: återskapar modern Android-struktur i ditt nuvarande projekt
      - name: Regenerate Android platform (flutter create .)
        run: flutter create --platforms=android .

      # (Valfritt) säkerställ nyare Gradle om din mall inte uppdateras
      - name: Force Gradle 8.x if needed
        run: |
          FILE=android/gradle/wrapper/gradle-wrapper.properties
          if [ -f "$FILE" ]; then
            sed -i 's/gradle-[0-9]\+\(\.[0-9]\+\)\?-all.zip/gradle-8.2-all.zip/g' "$FILE" || true
          fi

      # Commit:a tillbaka alla förändringar (android/, settings.gradle, wrapper osv.)
      - name: Commit regenerated Android files
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git add -A
          git commit -m "chore: flutter create --platforms=android (auto-fix Gradle/Android)" || echo "No changes to commit"
          git push

      # Bygg APK
      - name: Build APK
        run: flutter build apk --release

      # Ladda upp APK som artefakt
      - name: Upload APKs
        uses: actions/upload-artifact@v4
        with:
          name: app-release
          path: |
            build/app/outputs/flutter-apk/*.apk
            build/app/outputs/apk/release/*.apk